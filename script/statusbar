#! /usr/bin/bash
# This script updates the status bar by setting xsetroot -name

# Variables
# Formatting
left_seperator="["
right_seperator="]"
# Control
tick_rate=60 # Approximately how often should the display be updated
bad_color="^c#eb6f92^"
# Memory
memory_color="^c#ea9a97^"
memory_chr=""

# Battery : These are the icons used by the battery display
battery_color="^c#9ccfd8^"
battery_full="󱊣"
battery_mid="󱊢"
battery_low="󱊡"
battery_empt="󰂎"
battery_full_chr="󱊦"
battery_mid_chr="󱊥"
battery_low_chr="󱊤"
battery_empt_chr="󰢟"

# Info Gathering Functions
function check_date () {
	ret=$(date +"%a %b %_d")
	echo $ret
}

function check_time() {
	ret=$(date +"%-I:%M%P")
	echo $ret
}

function check_battery () {
	percent=$(cat /sys/class/power_supply/BAT0/capacity)
	status=$(cat /sys/class/power_supply/BAT0/status)

	if [ "$status" = "Charging" ]; then
		([[ "$percent" -lt 25 ]] && echo "$battery_empt_chr $percent%") || \
		([[ "$percent" -lt 50 ]] && echo "$battery_low_chr $percent%") || \
		([[ "$percent" -lt 75 ]] && echo "$battery_mid_chr $percent%") || \
		([[ "$percent" -le 100 ]] && echo "$battery_full_chr $percent%")
	else
		([[ "$percent" -lt 25 ]] && echo "$battery_empt $percent%") || \
		([[ "$percent" -lt 50 ]] && echo "$battery_low $percent%") || \
		([[ "$percent" -lt 75 ]] && echo "$battery_mid $percent%") || \
		([[ "$percent" -le 100 ]] && echo "$battery_full $percent%")
	fi
}

function check_ram () {
#	memory_free=$(free -h | grep Mem | awk '{print $3}' | sed 's/[^0-9.]*//g')
#	echo "${memory_chr}  ${memory_free}/${memory_total}"
	mem=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
	echo "${memory_chr}  ${mem%.*}%"
}

# Primary Functions
function set_status () {
	statusline=" $memory_color$left_seperator $(check_ram) $right_seperator"
	statusline+=" $battery_color$left_seperator $(check_battery) $right_seperator"
	statusline+=" $left_seperator $(check_time) $right_seperator"
	statusline+=" $left_seperator $(check_date) $right_seperator"
	
	xsetroot -name "$statusline"
}

 
# Main Loop
while :
do
	set_status
	sleep $tick_rate
done

